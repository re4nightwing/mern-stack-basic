[{"C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\index.js":"1","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\App.js":"2","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\components\\BlogMessages.js":"4","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\actions\\store.js":"5","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\actions\\blogMessage.js":"6","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\reducers\\index.js":"7","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\actions\\api.js":"8","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\reducers\\blogMessage.js":"9","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\components\\BlogMessageForm.js":"10","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\components\\useForm.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":1062,"mtime":1625425296870,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":5033,"mtime":1625425315632,"results":"16","hashOfConfig":"13"},{"size":337,"mtime":1625381634343,"results":"17","hashOfConfig":"13"},{"size":1297,"mtime":1625411106459,"results":"18","hashOfConfig":"13"},{"size":148,"mtime":1625298219590,"results":"19","hashOfConfig":"13"},{"size":450,"mtime":1625299553519,"results":"20","hashOfConfig":"13"},{"size":905,"mtime":1625411325382,"results":"21","hashOfConfig":"13"},{"size":3233,"mtime":1625424815313,"results":"22","hashOfConfig":"13"},{"size":682,"mtime":1625416596122,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1bri9do",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\index.js",[],["52","53"],"C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\App.js",[],"C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\components\\BlogMessages.js",["54","55"],"import { Typography } from '@material-ui/core';\r\nimport { ListItemText } from '@material-ui/core';\r\nimport { Grid, Paper, withStyles, List, ListItem, Divider, Button } from '@material-ui/core';\r\nimport React,{useEffect, useState, Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/blogMessage';\r\nimport BlogMessageForm from \"./BlogMessageForm\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { DeleteSweep } from \"@material-ui/icons\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\n\r\nconst styles = theme => ({\r\n    paper :{\r\n        margin: theme.spacing(3),\r\n        padding: theme.spacing(2)\r\n    },\r\n    smMargin:{\r\n        margin: theme.spacing(1)\r\n    },\r\n    actionDiv:{\r\n        textAlign:\"center\"\r\n    },\r\n    wdFull:{\r\n        width: '100%',\r\n        margin: theme.spacing(1),\r\n        border: '1px solid rgba(0, 0, 0, .125)',\r\n    }\r\n})\r\n\r\nconst BlogMessages = ({classes, ...props}) => {\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        props.fetchAllBlogMessages()\r\n    },[])//DidMount\r\n\r\nconst onDelete = id =>{\r\n    const onSuccess = () => {\r\n        ButterToast.raise({\r\n            content: <Cinnamon.Crisp title=\"Note Box\"\r\n            content=\"Deleted successfully!\"\r\n            scheme = {Cinnamon.Crisp.SCHEME_PURPLE}\r\n            icon={<DeleteSweep />}\r\n            />\r\n        })\r\n    }\r\n    if(window.confirm(\"Are you sure to delete this record?\"))\r\n        props.deleteBlogMessage(id, onSuccess)\r\n}\r\n\r\n    return (\r\n        <Grid container>\r\n            <Accordion className={classes.wdFull}>\r\n                <AccordionSummary\r\n                expandIcon={<NoteAddIcon color=\"primary\" />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>Add note</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <BlogMessageForm {...{currentId, setCurrentId}} />\r\n                        </Paper>\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Grid item xs={12}>\r\n                <Paper className={classes.paper}>\r\n                    <List>\r\n                        {\r\n                            props.blogMessageList.map((record, index) =>{\r\n                                return(\r\n                                    <Fragment key={index}>\r\n                                        <ListItem>\r\n                                            <ListItemText>\r\n                                                <Typography variant=\"h5\">\r\n                                                    {record.title}\r\n                                                </Typography>\r\n                                                <div>\r\n                                                    {record.message}\r\n                                                </div>\r\n                                                <div className={classes.actionDiv}>\r\n                                                    <IconButton aria-label=\"edit\" color=\"primary\" variant=\"contained\" size=\"small\" className={classes.smMargin} onClick={()=>setCurrentId(record._id)}>\r\n                                                        <EditIcon />\r\n                                                    </IconButton>\r\n                                                    <IconButton aria-label=\"delete\" color=\"secondary\" variant=\"contained\" size=\"small\" className={classes.smMargin} onClick={()=> onDelete(record._id)}>\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </ListItemText>\r\n                                        </ListItem>\r\n                                        <Divider component=\"li\" />\r\n                                    </Fragment>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    blogMessageList: state.blogMessage.list\r\n})\r\n\r\nconst mapActionToProps ={\r\n    fetchAllBlogMessages : actions.fetchAll,\r\n    deleteBlogMessage : actions.Delete\r\n}\r\n//props.fetchAllBlogMessages\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(BlogMessages));","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\actions\\store.js",[],"C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\actions\\blogMessage.js",[],"C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\reducers\\index.js",[],"C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\actions\\api.js",["56"],"import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:4000/'\r\n\r\nexport default {\r\n    blogMessage(url=baseUrl+'blogPosts/'){\r\n        return{\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url+id),\r\n            create: newRecord => axios.post(url,newRecord),\r\n            update: (id,updatedRecord) => axios.put(url+id,updatedRecord),\r\n            delete: id=> axios.delete(url+id)\r\n        }\r\n    }\r\n}","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\reducers\\blogMessage.js",["57","58"],"import {ACTION_TYPES} from '../actions/blogMessage'\r\nconst initialState ={\r\n    list:[]\r\n}\r\n//blogMessage.list\r\nexport const blogMessage = (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case ACTION_TYPES.FETCH_ALL:\r\n            return{\r\n                ...state,\r\n                list:[...action.payload]\r\n            }\r\n        case ACTION_TYPES.CREATE:\r\n            return{\r\n                ...state,\r\n                list:[...state.list,action.payload]\r\n            }\r\n        case ACTION_TYPES.UPDATE:\r\n            return{\r\n                ...state,\r\n                list: state.list.map(x => x._id == action.payload._id ? action.payload : x)\r\n            }\r\n        case ACTION_TYPES.DELETE:\r\n            return{\r\n                ...state,\r\n                list: state.list.filter(x => x._id != action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\components\\BlogMessageForm.js",["59","60","61","62","63","64"],"import { TextField, withStyles, Button } from '@material-ui/core';\r\nimport React,{useEffect, useState} from 'react';\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from '../actions/blogMessage';\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\r\n\r\nconst initialFeedValues = {\r\n    title:'',\r\n    message:''\r\n}\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1)\r\n        },\r\n    },\r\n    form:{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    },\r\n    postBtn:{\r\n        backgroundColor: '#00ADB5',\r\n        '&:hover': {\r\n            backgroundColor: '#A6E3E9',\r\n            borderColor: '#00ADB5',\r\n            color: '#00ADB5'\r\n        }\r\n    }\r\n})\r\n\r\nconst BlogMessageForm = ({classes, ...props}) => {\r\n\r\n    useEffect(() => {\r\n        if(props.currentId != 0){\r\n            setValues({\r\n                ...props.blogMessageList.find(x => x._id == props.currentId)\r\n            })\r\n            setErrors({})\r\n        }\r\n    },[props.currentId])\r\n\r\n    const validate = () =>{\r\n        let temp = {...errors}\r\n        temp.title = values.title?\"\":\"Required\"\r\n        temp.message = values.message?\"\":\"Required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x=> x==\"\")\r\n    }\r\n\r\n    var {values, setValues, errors, setErrors, handleInputChange, resetForm} = useForm(initialFeedValues, props.setCurrentId)\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        const onSuccess = () => {\r\n            ButterToast.raise({\r\n                content: <Cinnamon.Crisp title=\"Note Box\"\r\n                content=\"submitted successfully!\"\r\n                scheme = {Cinnamon.Crisp.SCHEME_PURPLE}\r\n                icon={<AssignmentTurnedIn />}\r\n                />\r\n            })\r\n            resetForm()\r\n        }\r\n        if(validate()){\r\n            if(props.currentId == 0)\r\n                props.createBlogMessage(values, onSuccess)\r\n            else\r\n                props.updateBlogMessage(props.currentId, values, onSuccess)\r\n        }\r\n    }\r\n    return(\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}>\r\n            <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={values.title} onChange={handleInputChange} {...(errors.title && {error:true, helperText:errors.title})} />\r\n            <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows=\"8\" value={values.message} onChange={handleInputChange} {...(errors.message && {error:true, helperText:errors.message})} />\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" className={classes.postBtn}>Submit</Button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    blogMessageList: state.blogMessage.list\r\n})\r\n\r\nconst mapActionToProps ={\r\n    createBlogMessage : actions.create,\r\n    updateBlogMessage : actions.update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps) (withStyles(styles)(BlogMessageForm));","C:\\xampp\\htdocs\\MERN\\mern-stack-client\\src\\components\\useForm.js",["65","66"],"import React,{useEffect, useState} from 'react';\r\n\r\nconst useForm = (initialFeedValues, setCurrentId) => {\r\n    const [values, setValues] = useState(initialFeedValues)\r\n    const [errors, setErrors] = useState({}) \r\n\r\n    const handleInputChange = e =>{\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const resetForm =() =>{\r\n        setValues(initialFeedValues)\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return{\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\n\r\nexport default useForm;",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":60,"nodeType":"73","messageId":"74","endLine":3,"endColumn":66},{"ruleId":"75","severity":1,"message":"76","line":41,"column":7,"nodeType":"77","endLine":41,"endColumn":9,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":1,"nodeType":"81","endLine":15,"endColumn":2},{"ruleId":"82","severity":1,"message":"83","line":21,"column":49,"nodeType":"84","messageId":"85","endLine":21,"endColumn":51},{"ruleId":"82","severity":1,"message":"86","line":26,"column":52,"nodeType":"84","messageId":"85","endLine":26,"endColumn":54},{"ruleId":"71","severity":1,"message":"87","line":2,"column":26,"nodeType":"73","messageId":"74","endLine":2,"endColumn":34},{"ruleId":"82","severity":1,"message":"86","line":38,"column":28,"nodeType":"84","messageId":"85","endLine":38,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":40,"column":58,"nodeType":"84","messageId":"85","endLine":40,"endColumn":60},{"ruleId":"75","severity":1,"message":"88","line":44,"column":7,"nodeType":"77","endLine":44,"endColumn":24,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"83","line":53,"column":47,"nodeType":"84","messageId":"85","endLine":53,"endColumn":49},{"ruleId":"82","severity":1,"message":"83","line":70,"column":32,"nodeType":"84","messageId":"85","endLine":70,"endColumn":34},{"ruleId":"71","severity":1,"message":"90","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":13},{"ruleId":"71","severity":1,"message":"91","line":1,"column":15,"nodeType":"73","messageId":"74","endLine":1,"endColumn":24},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["94"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'props.blogMessageList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.",["95"],"'React' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [props]",{"range":"100","text":"101"},"Update the dependencies array to be: [props.blogMessageList, props.currentId, setErrors, setValues]",{"range":"102","text":"103"},[1442,1444],"[props]",[1145,1162],"[props.blogMessageList, props.currentId, setErrors, setValues]"]