{"ast":null,"code":"import { ACTION_TYPES } from '../actions/blogMessage';\nconst initialState = {\n  list: []\n}; //blogMessage.list\n\nexport const blogMessage = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALL:\n      return { ...state,\n        list: [...action.payload]\n      };\n\n    case ACTION_TYPES.CREATE:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case ACTION_TYPES.UPDATE:\n      return { ...state,\n        list: state.list.map(x => x._id == action.payload._id ? action.payload : x)\n      };\n\n    case ACTION_TYPES.DELETE:\n      return { ...state,\n        list: state.list.filter(x => x._id)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/xampp/htdocs/MERN/mern-stack-client/src/reducers/blogMessage.js"],"names":["ACTION_TYPES","initialState","list","blogMessage","state","action","type","FETCH_ALL","payload","CREATE","UPDATE","map","x","_id","DELETE","filter"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,wBAA3B;AACA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,IAAI,EAAC;AADW,CAApB,C,CAGA;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAArB,KAA8B;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,YAAY,CAACO,SAAlB;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,IAAI,EAAC,CAAC,GAAGG,MAAM,CAACG,OAAX;AAFH,OAAN;;AAIJ,SAAKR,YAAY,CAACS,MAAlB;AACI,aAAM,EACF,GAAGL,KADD;AAEFF,QAAAA,IAAI,EAAC,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAeG,MAAM,CAACG,OAAtB;AAFH,OAAN;;AAIJ,SAAKR,YAAY,CAACU,MAAlB;AACI,aAAM,EACF,GAAGN,KADD;AAEFF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWS,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACC,GAAF,IAASR,MAAM,CAACG,OAAP,CAAeK,GAAxB,GAA8BR,MAAM,CAACG,OAArC,GAA+CI,CAAnE;AAFJ,OAAN;;AAIJ,SAAKZ,YAAY,CAACc,MAAlB;AACI,aAAM,EACF,GAAGV,KADD;AAEFF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWa,MAAX,CAAkBH,CAAC,IAAIA,CAAC,CAACC,GAAzB;AAFJ,OAAN;;AAIJ;AACI,aAAOT,KAAP;AAtBR;AAwBH,CAzBM","sourcesContent":["import {ACTION_TYPES} from '../actions/blogMessage'\r\nconst initialState ={\r\n    list:[]\r\n}\r\n//blogMessage.list\r\nexport const blogMessage = (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case ACTION_TYPES.FETCH_ALL:\r\n            return{\r\n                ...state,\r\n                list:[...action.payload]\r\n            }\r\n        case ACTION_TYPES.CREATE:\r\n            return{\r\n                ...state,\r\n                list:[...state.list,action.payload]\r\n            }\r\n        case ACTION_TYPES.UPDATE:\r\n            return{\r\n                ...state,\r\n                list: state.list.map(x => x._id == action.payload._id ? action.payload : x)\r\n            }\r\n        case ACTION_TYPES.DELETE:\r\n            return{\r\n                ...state,\r\n                list: state.list.filter(x => x._id )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}